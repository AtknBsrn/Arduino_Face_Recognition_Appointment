import sqlite3
import face_recognition
import numpy as np


# ğŸ“Œ VeritabanÄ± baÄŸlantÄ±sÄ±nÄ± oluÅŸtur
def connect_db():
    return sqlite3.connect('face_recognition.db')


# ğŸ“Œ YÃ¼z encoding'ini veritabanÄ±ndan al
def get_face_encoding(name):
    conn = connect_db()
    c = conn.cursor()

    c.execute("SELECT face_encoding FROM users WHERE name=?", (name,))
    result = c.fetchone()

    conn.close()

    if result:
        return np.frombuffer(result[0], dtype=np.float64)  # DoÄŸru formatta veriyi al
    return None


# ğŸ“Œ YÃ¼z encoding'ini veritabanÄ±na ekle
def add_face_encoding(name, image_path):
    image = face_recognition.load_image_file(image_path)
    encodings = face_recognition.face_encodings(image)

    if not encodings:
        print("âš  YÃ¼z algÄ±lanamadÄ±! FarklÄ± bir fotoÄŸraf deneyin.")
        return False

    encoding = encodings[0]

    conn = connect_db()
    c = conn.cursor()

    # KullanÄ±cÄ± zaten var mÄ± kontrol et
    c.execute("SELECT * FROM users WHERE name=?", (name,))
    result = c.fetchone()

    if result:
        c.execute("UPDATE users SET face_encoding=? WHERE name=?", (encoding.tobytes(), name))
        print(f"ğŸ”„ {name} iÃ§in yÃ¼z verisi gÃ¼ncellendi.")
    else:
        c.execute("INSERT INTO users (name, face_encoding) VALUES (?, ?)", (name, encoding.tobytes()))
        print(f"âœ… {name} iÃ§in yeni yÃ¼z verisi eklendi.")

    conn.commit()
    conn.close()
    return True


# ğŸ“Œ KullanÄ±cÄ±nÄ±n randevu saatini veritabanÄ±na ekle veya gÃ¼ncelle
def add_randevu(name, randevu_saati):
    conn = connect_db()
    c = conn.cursor()

    c.execute("SELECT * FROM users WHERE name=?", (name,))
    result = c.fetchone()

    if result:
        c.execute("UPDATE users SET randevu_saati=? WHERE name=?", (randevu_saati, name))
        print(f"ğŸ”„ {name} iÃ§in randevu saati gÃ¼ncellendi: {randevu_saati}")
    else:
        c.execute("INSERT INTO users (name, randevu_saati) VALUES (?, ?)", (name, randevu_saati))
        print(f"âœ… {name} iÃ§in yeni randevu eklendi: {randevu_saati}")

    conn.commit()
    conn.close()


# ğŸ“Œ KullanÄ±cÄ±nÄ±n randevu saatini al
def get_randevu(name):
    conn = connect_db()
    c = conn.cursor()

    c.execute("SELECT randevu_saati FROM users WHERE name=?", (name,))
    result = c.fetchone()

    conn.close()

    if result and result[0]:
        return result[0]
    return None
